Vue 组件之间通信方式:
    父子通信:
        1. props/$emit                  # props 单项数据流，只有父组件里面可以改，子组件修改会报错，但是可以修改内部引用
        2. $parent/$children/$refs      # 直接获取实例
        4. $attrs/$listeners            # $attrs: 继承所有的父组件属性（除了prop传递的属性、class和style;  $listeners: 包含了父作用域中的v-on事件监听器
        5. provide/inject               # 禁止双向绑定，即: 值可以在 provide 中修改，同时可以在 inject 中修改
                                        # 如果想让 provide 提供的属性是 reactive 的，那么 provide 提供的属性必须来自 data() 或者  Vue.observable() 或者 Vue.reactive()
    兄弟通信:
        1. $emit/$on        # new Vue() 作为事件总线; vuex 的原理
        2. vuex             
    跨级通信:
        1. $attrs/$listeners
        2. provide/inject               # 子组件 向 祖先组件 传递数据，provide 提供的对象必须是 reactive 的
        3. $emit/$on                    # 这里不能通过 this.$emit() 发射事件，这样只有直接父组件可以接收到事件，必须通过一个事件总线 或者 this.$root
        4. vuex                         # 坑: 组件可以同时有多个实例时，该方法会导致多实例间相互影响
        
        
        
    
    
    
    
